{"ast":null,"code":"import { throwError } from \"rxjs\";\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LaunchService = /*#__PURE__*/(() => {\n  class LaunchService {\n    constructor(http) {\n      this.http = http;\n      this.myUrl = 'json/DiversityInfo.json'; // private cloudCatsApiUrl = 'https://cloud-cats-350015.ue.r.appspot.com/info/businesses';\n\n      this.cloudCatsApiUrl = 'https://biaas-t6oppuclgq-uc.a.run.app/info/businesses';\n    } // getLists(): Observable<BusinessDiversityInfo> {\n    //   return this.http.get<BusinessDiversityInfo>(this.cloudCatsApiUrl)\n    //     .pipe(\n    //       tap(data => console.log('All: ', JSON.stringify(data))),\n    //       catchError(this.handleError)\n    //     );\n    // }\n\n\n    getInfo() {\n      return this.http.post(this.cloudCatsApiUrl, {}).pipe(tap(data => console.log('All: ', JSON.stringify(data))), catchError(this.handleError));\n    } // getList(id: string): Observable<BusinessDiversityInfo | undefined> {\n    //   return this.getLists()\n    //     .pipe(\n    //       map((places: IList[]) => places.find(x => x.businessInfoList[0].businessFEIN === id))\n    //     );\n    // }\n\n\n    handleError(err) {\n      let errorMessage = '';\n\n      if (err.error instanceof ErrorEvent) {\n        errorMessage = `An error occurred: ${err.error.message}`;\n      } else {\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n      }\n\n      console.error(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  LaunchService.ɵfac = function LaunchService_Factory(t) {\n    return new (t || LaunchService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LaunchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LaunchService,\n    factory: LaunchService.ɵfac,\n    providedIn: 'root'\n  });\n  return LaunchService;\n})();","map":null,"metadata":{},"sourceType":"module"}